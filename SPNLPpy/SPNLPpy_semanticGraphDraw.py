"""SPNLPpy_semanticGraphDraw.py

# Author:
Richard Bruce Baxter - Copyright (c) 2022-2023 Baxter AI (baxterai.com)

# License:
MIT License

# Installation:
see SPNLPpy_main.py

# Usage:
see SPNLPpy_main.py

# Description:
SPNLP Semantic Graph Draw Class

See GIA/GIAdraw.hpp for template
See SHARED/SHAREDglobalDefs.hpp for template (colours)

"""

import SPNLPpy_semanticNodeClass


#sync with SHARED/SHAREDglobalDefs.hpp;

SHARED_COLOUR_UNDEFINED = (0)
SHARED_COLOUR_BLACK = (0)
SHARED_COLOUR_BLUE = (1)
SHARED_COLOUR_GREEN = (2)
SHARED_COLOUR_CYAN = (11)
SHARED_COLOUR_RED = (4)
SHARED_COLOUR_MAGENTA = (5)
SHARED_COLOUR_BROWN = (6)
SHARED_COLOUR_LIGHTGREY = (7)
SHARED_COLOUR_DARKGREY = (8)
SHARED_COLOUR_YELLOW = (14)
SHARED_COLOUR_WHITE = (15)
SHARED_COLOUR_ORANGE = (25)
SHARED_COLOUR_PURPLE = (22)
SHARED_COLOUR_DARKBLUE = (272)
SHARED_COLOUR_DARKGREEN = (288)
SHARED_COLOUR_DARKRED = (320)
SHARED_COLOUR_DARKYELLOW = (84)
SHARED_COLOUR_AQUA = (3)

#SHARED_COLOUR_LIGHT_BLUE = (9)
#SHARED_COLOUR_LIGHT_GREEN = (17)
#SHARED_COLOUR_LIGHT_CYAN = (323)
#SHARED_COLOUR_LIGHT_RED = (13)
#SHARED_COLOUR_LIGHT_MAGENTA = (29)
#SHARED_COLOUR_LIGHT_BROWN = (86)
#SHARED_COLOUR_LIGHT_YELLOW = (18)
#SHARED_COLOUR_LIGHT_ORANGE = (125)
#SHARED_COLOUR_LIGHT_PURPLE = (31)
#SHARED_COLOUR_LIGHT_AQUA = (118)

#sync with RTviewinfo.hpp;
TAL_FILE_COLOUR_BLACK = "black"
TAL_FILE_COLOUR_BLUE = "blue"
TAL_FILE_COLOUR_GREEN = "green"
TAL_FILE_COLOUR_CYAN = "cyan"
TAL_FILE_COLOUR_RED = "red"
TAL_FILE_COLOUR_MAGENTA = "magenta"
TAL_FILE_COLOUR_BROWN = "brown"
TAL_FILE_COLOUR_LIGHTGREY = "lightgrey"
TAL_FILE_COLOUR_DARKGREY = "darkgrey"
TAL_FILE_COLOUR_YELLOW = "yellow"
TAL_FILE_COLOUR_WHITE = "white"
TAL_FILE_COLOUR_ORANGE = "orange"
TAL_FILE_COLOUR_PURPLE = "purple"
TAL_FILE_COLOUR_DARKBLUE = "darkblue"
TAL_FILE_COLOUR_DARKGREEN = "darkgreen"
TAL_FILE_COLOUR_DARKRED = "darkred"
TAL_FILE_COLOUR_DARKYELLOW = "darkyellow"
TAL_FILE_COLOUR_AQUA = "aqua"

TAL_FILE_COLOUR_BLACK_RGB = "000000"
TAL_FILE_COLOUR_BLUE_RGB = "0000C0"
TAL_FILE_COLOUR_GREEN_RGB = "006000"
TAL_FILE_COLOUR_CYAN_RGB = "00F0F0"
TAL_FILE_COLOUR_RED_RGB = "F00000"
TAL_FILE_COLOUR_MAGENTA_RGB = "FF00FF"
TAL_FILE_COLOUR_BROWN_RGB = "C06000"
TAL_FILE_COLOUR_LIGHTGREY_RGB = "C0C0C0"
TAL_FILE_COLOUR_DARKGREY_RGB = "606060"
TAL_FILE_COLOUR_YELLOW_RGB = "FFFF00"
TAL_FILE_COLOUR_WHITE_RGB = "FFFFFF"
TAL_FILE_COLOUR_ORANGE_RGB = "FF0600"
TAL_FILE_COLOUR_PURPLE_RGB = "6000FF"
TAL_FILE_COLOUR_DARKBLUE_RGB = "19325A"
TAL_FILE_COLOUR_DARKGREEN_RGB = "00451A"
TAL_FILE_COLOUR_DARKRED_RGB = "720012"
TAL_FILE_COLOUR_DARKYELLOW_RGB = "AA7D55"
TAL_FILE_COLOUR_AQUA_RGB = "9CD6CC"
GIAcolourHtmlDictionary = {
SHARED_COLOUR_BLACK:TAL_FILE_COLOUR_BLACK_RGB, 
SHARED_COLOUR_BLUE:TAL_FILE_COLOUR_BLUE_RGB, 
SHARED_COLOUR_GREEN:TAL_FILE_COLOUR_GREEN_RGB, 
SHARED_COLOUR_CYAN:TAL_FILE_COLOUR_CYAN_RGB, 
SHARED_COLOUR_RED:TAL_FILE_COLOUR_RED_RGB, 
SHARED_COLOUR_MAGENTA:TAL_FILE_COLOUR_MAGENTA_RGB, 
SHARED_COLOUR_BROWN:TAL_FILE_COLOUR_BROWN_RGB, 
SHARED_COLOUR_LIGHTGREY:TAL_FILE_COLOUR_LIGHTGREY_RGB, 
SHARED_COLOUR_DARKGREY:TAL_FILE_COLOUR_DARKGREY_RGB, 
SHARED_COLOUR_YELLOW:TAL_FILE_COLOUR_YELLOW_RGB, 
SHARED_COLOUR_WHITE:TAL_FILE_COLOUR_WHITE_RGB, 
SHARED_COLOUR_ORANGE:TAL_FILE_COLOUR_ORANGE_RGB, 
SHARED_COLOUR_PURPLE:TAL_FILE_COLOUR_PURPLE_RGB,
SHARED_COLOUR_DARKBLUE:TAL_FILE_COLOUR_DARKBLUE_RGB,
SHARED_COLOUR_DARKGREEN:TAL_FILE_COLOUR_DARKGREEN_RGB,
SHARED_COLOUR_DARKRED:TAL_FILE_COLOUR_DARKRED_RGB,
SHARED_COLOUR_DARKYELLOW:TAL_FILE_COLOUR_DARKYELLOW_RGB,
SHARED_COLOUR_AQUA:TAL_FILE_COLOUR_AQUA_RGB}

LRP_SHARED_ENTITY_TYPE_NETWORK_INDEX_COLOUR = (SHARED_COLOUR_MAGENTA)




#sync with LRPglobalsDefs.hpp;
LRP_SHARED_ENTITY_TYPE_UNDEFINED_COLOUR = (SHARED_COLOUR_BLACK)
LRP_SHARED_ENTITY_TYPE_NETWORK_INDEX_COLOUR = (SHARED_COLOUR_MAGENTA)
LRP_SHARED_ENTITY_TYPE_SUBSTANCE_COLOUR = (SHARED_COLOUR_LIGHTGREY)
LRP_SHARED_ENTITY_TYPE_CONCEPT_COLOUR = (SHARED_COLOUR_BLUE)
LRP_SHARED_ENTITY_TYPE_ACTION_COLOUR = (SHARED_COLOUR_GREEN)
LRP_SHARED_ENTITY_TYPE_CONDITION_COLOUR = (SHARED_COLOUR_RED)
LRP_SHARED_ENTITY_TYPE_PROPERTY_COLOUR = (SHARED_COLOUR_CYAN)
LRP_SHARED_ENTITY_TYPE_DEFINITION_COLOUR = (SHARED_COLOUR_BLUE)
LRP_SHARED_ENTITY_TYPE_QUALITY_COLOUR = (SHARED_COLOUR_AQUA)

LRP_SHARED_ENTITY_TYPE_LOGIC_REFERENCE_COLOUR = (SHARED_COLOUR_DARKGREEN)

LRP_SHARED_ENTITY_CONNECTION_TYPE_UNDEFINED_COLOUR = (SHARED_COLOUR_BLACK)
LRP_SHARED_ENTITY_CONNECTION_TYPE_SAMEREFERENCESET_COLOUR = (SHARED_COLOUR_GREEN)
LRP_SHARED_ENTITY_CONNECTION_TYPE_DIFFREFERENCESET_COLOUR = (SHARED_COLOUR_RED)
LRP_SHARED_ENTITY_CONNECTION_TYPE_REFERENCE_COLOUR = (SHARED_COLOUR_YELLOW)



#sync with GIA/GIAdraw.hpp;


GIA_DRAW_USE_UNIQUE_COLOURS_FOR_ENTITY_DEFINITION_NODES	= True
GIA_DRAW_USE_UNIQUE_COLOURS_FOR_ENTITY_CONNECTIONS = False
if(not(SPNLPpy_semanticNodeClass.GIA_ADD_ARTIFICIAL_AUXILIARY_FOR_ALL_PROPERTIES_AND_DEFINITIONS)):
	GIA_DRAW_USE_UNIQUE_COLOURS_FOR_ENTITY_CONNECTIONS = True

GIA_DRAW_RELATIONSHIP_SUBJECT_CONNECTION_COLOUR = (SHARED_COLOUR_BLACK)	#SHARED_COLOUR_AQUA		#this was black SHARED_COLOUR_BLACK in the original spec
GIA_DRAW_RELATIONSHIP_OBJECT_CONNECTION_COLOUR = (SHARED_COLOUR_BLACK)	#SHARED_COLOUR_PURPLE	#this was black SHARED_COLOUR_BLACK in the original spec

GIA_DRAW_NETWORK_INDEX_NODE_COLOUR = (LRP_SHARED_ENTITY_TYPE_NETWORK_INDEX_COLOUR)	#this was blue SHARED_COLOUR_BLUE in the original spec, white SHARED_COLOUR_WHITE temporarily

#if(GIA_DISABLE_ALIAS_ENTITY_MERGING):
#	GIA_DRAW_DEFINITION_MARK_AS_ALIAS_CONNECTION_COLOUR = (SHARED_COLOUR_DARKBLUE)


GIA_DRAW_ACTION_NODE_COLOUR = (LRP_SHARED_ENTITY_TYPE_ACTION_COLOUR)
if(GIA_DRAW_USE_UNIQUE_COLOURS_FOR_ENTITY_CONNECTIONS):
	GIA_DRAW_ACTION_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_ACTION_COLOUR)
	GIA_DRAW_ACTION_REVERSE_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_ACTION_COLOUR)
else:
	GIA_DRAW_ACTION_CONNECTION_COLOUR = (GIA_DRAW_RELATIONSHIP_SUBJECT_CONNECTION_COLOUR)
	GIA_DRAW_ACTION_REVERSE_CONNECTION_COLOUR = (GIA_DRAW_RELATIONSHIP_OBJECT_CONNECTION_COLOUR)		

if(GIA_DRAW_USE_UNIQUE_COLOURS_FOR_ENTITY_DEFINITION_NODES):
	GIA_DRAW_ACTION_DEFINITION_NODE_COLOUR = (SHARED_COLOUR_BROWN)					#this was dark green SHARED_COLOUR_DARKGREEN in original GIA specA
else:
	GIA_DRAW_ACTION_DEFINITION_NODE_COLOUR = (GIA_DRAW_NETWORK_INDEX_NODE_COLOUR)


GIA_DRAW_CONDITION_NODE_COLOUR = (LRP_SHARED_ENTITY_TYPE_CONDITION_COLOUR)
if(GIA_DRAW_USE_UNIQUE_COLOURS_FOR_ENTITY_CONNECTIONS):
	GIA_DRAW_CONDITION_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_CONDITION_COLOUR)
	GIA_DRAW_CONDITION_REVERSE_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_CONDITION_COLOUR)
else:
	GIA_DRAW_CONDITION_CONNECTION_COLOUR = (GIA_DRAW_RELATIONSHIP_SUBJECT_CONNECTION_COLOUR)
	GIA_DRAW_CONDITION_REVERSE_CONNECTION_COLOUR = (GIA_DRAW_RELATIONSHIP_OBJECT_CONNECTION_COLOUR)		

if(GIA_DRAW_USE_UNIQUE_COLOURS_FOR_ENTITY_DEFINITION_NODES):
	GIA_DRAW_CONDITION_DEFINITION_NODE_COLOUR = (SHARED_COLOUR_ORANGE)
else:
	GIA_DRAW_CONDITION_DEFINITION_NODE_COLOUR = (GIA_DRAW_NETWORK_INDEX_NODE_COLOUR)


GIA_DRAW_PROPERTY_NODE_COLOUR = (LRP_SHARED_ENTITY_TYPE_PROPERTY_COLOUR)							#not used in original spec
if(GIA_DRAW_USE_UNIQUE_COLOURS_FOR_ENTITY_CONNECTIONS):
	GIA_DRAW_PROPERTY_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_PROPERTY_COLOUR)
	GIA_DRAW_PROPERTY_REVERSE_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_PROPERTY_COLOUR)		
else:
	GIA_DRAW_PROPERTY_CONNECTION_COLOUR = (GIA_DRAW_RELATIONSHIP_SUBJECT_CONNECTION_COLOUR)
	GIA_DRAW_PROPERTY_REVERSE_CONNECTION_COLOUR = (GIA_DRAW_RELATIONSHIP_OBJECT_CONNECTION_COLOUR)		


GIA_DRAW_DEFINITION_NODE_COLOUR = (LRP_SHARED_ENTITY_TYPE_DEFINITION_COLOUR)							#not used in original spec
if(GIA_DRAW_USE_UNIQUE_COLOURS_FOR_ENTITY_CONNECTIONS):
	GIA_DRAW_DEFINITION_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_DEFINITION_COLOUR)
	GIA_DRAW_DEFINITION_REVERSE_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_DEFINITION_COLOUR)
else:
	GIA_DRAW_DEFINITION_CONNECTION_COLOUR = (GIA_DRAW_RELATIONSHIP_SUBJECT_CONNECTION_COLOUR)
	GIA_DRAW_DEFINITION_REVERSE_CONNECTION_COLOUR = (GIA_DRAW_RELATIONSHIP_OBJECT_CONNECTION_COLOUR)		


GIA_DRAW_INSTANCE_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_NETWORK_INDEX_COLOUR)
GIA_DRAW_INSTANCE_REVERSE_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_NETWORK_INDEX_COLOUR)


GIA_DRAW_CONDITION_TIME_CONNECTION_COLOUR = (LRP_SHARED_ENTITY_TYPE_CONDITION_COLOUR)			#colour not defined in original GIA spec
GIA_DRAW_CONDITION_TIME_NODE_COLOUR = (LRP_SHARED_ENTITY_TYPE_CONDITION_COLOUR)			#this was red in the original spec
#GIA_DRAW_CONDITION_DEFINITION_TIME_NODE_COLOUR = (SHARED_COLOUR_ORANGE)	#colour not defined in original GIA spec

#GIA_DRAW_CONDITION_TIME_STATE_NODE_COLOUR = (SHARED_COLOUR_DARKRED)
GIA_DRAW_SUBSTANCE_QUALITY_NODE_COLOUR = (LRP_SHARED_ENTITY_TYPE_QUALITY_COLOUR)



GIA_DRAW_SUBSTANCE_NODE_COLOUR = (LRP_SHARED_ENTITY_TYPE_SUBSTANCE_COLOUR)	#this was cyan(?) in the original spec

GIA_DRAW_CONCEPT_NODE_COLOUR = (LRP_SHARED_ENTITY_TYPE_CONCEPT_COLOUR)
GIA_DRAW_ACTION_CONCEPT_NODE_COLOUR = (GIA_DRAW_ACTION_DEFINITION_NODE_COLOUR)

GIA_DRAW_SUBSTANCE_QUANTITY_NODE_COLOUR = (SHARED_COLOUR_PURPLE)
GIA_DRAW_SUBSTANCE_MEASURE_NODE_COLOUR = (SHARED_COLOUR_LIGHTGREY)

GIA_DRAW_QUERY_QUESTION_NODE_COLOUR = (SHARED_COLOUR_YELLOW)
GIA_DRAW_QUERY_ANSWER_NODE_COLOUR = (SHARED_COLOUR_YELLOW)
GIA_DRAW_QUERY_ANSWER_CONTEXT_NODE_COLOUR = (SHARED_COLOUR_DARKGREY)

GIA_DRAW_ENTITY_REFERENCE_NODE_COLOUR = (LRP_SHARED_ENTITY_CONNECTION_TYPE_REFERENCE_COLOUR)

#GIA_ENTITY_NUMBER_OF_TYPES
entityNodeTypeColourArray = [GIA_DRAW_NETWORK_INDEX_NODE_COLOUR, GIA_DRAW_SUBSTANCE_NODE_COLOUR, GIA_DRAW_CONCEPT_NODE_COLOUR, GIA_DRAW_ACTION_NODE_COLOUR, GIA_DRAW_CONDITION_NODE_COLOUR, GIA_DRAW_PROPERTY_NODE_COLOUR, GIA_DRAW_DEFINITION_NODE_COLOUR, GIA_DRAW_SUBSTANCE_QUALITY_NODE_COLOUR]

#GIA_ENTITY_NUMBER_OF_VECTOR_CONNECTION_TYPES
entityVectorConnectionDrawColourNameArray = [GIA_DRAW_ACTION_CONNECTION_COLOUR, GIA_DRAW_ACTION_REVERSE_CONNECTION_COLOUR, GIA_DRAW_CONDITION_CONNECTION_COLOUR, GIA_DRAW_CONDITION_REVERSE_CONNECTION_COLOUR, GIA_DRAW_PROPERTY_CONNECTION_COLOUR, GIA_DRAW_PROPERTY_REVERSE_CONNECTION_COLOUR, GIA_DRAW_DEFINITION_CONNECTION_COLOUR, GIA_DRAW_DEFINITION_REVERSE_CONNECTION_COLOUR, GIA_DRAW_RELATIONSHIP_SUBJECT_CONNECTION_COLOUR, GIA_DRAW_RELATIONSHIP_OBJECT_CONNECTION_COLOUR, GIA_DRAW_INSTANCE_CONNECTION_COLOUR, GIA_DRAW_INSTANCE_REVERSE_CONNECTION_COLOUR]	#instance colour is dynamicallyDetermined


import networkx as nx
import matplotlib.pyplot as plt
semanticGraph = nx.Graph()
semanticGraphNodeColorMap = []
#drawSemanticGraphTemporarySubstanceSyntacticalBranches = True	#for visual debug after formRelationshipEntityConnections phase

def clearSemanticGraph():
	semanticGraph.clear()	#only draw graph for single sentence
	semanticGraphNodeColorMap.clear()

def drawSemanticGraphNode(entity):
	colorHtml = getEntityNodeColour(entity.entityType)
	semanticGraph.add_node(entity.entityName)	#do not manually define a position (automatically generated)	#
	semanticGraphNodeColorMap.append(colorHtml)

def drawSemanticGraphConnection(sourceEntity, targetEntity, connectionType):
	colorHtml = getConnectionColour(connectionType)
	#print("connectionColourHtml = ", connectionColourHtml)
	semanticGraph.add_edge(sourceEntity.entityName, targetEntity.entityName, arrowstyle="->", arrowsize=10, edge_color=colorHtml)

def displaySemanticGraph():
	#pos = nx.get_node_attributes(semanticGraph, 'pos')
	#nx.draw(graph, pos, with_labels=True)
	nx.draw(semanticGraph, node_color=semanticGraphNodeColorMap, with_labels=True)
	plt.show()
	

def getEntityNodeColour(entityType):
	colourIndex = entityNodeTypeColourArray[entityType]
	colorHtml = GIAcolourHtmlDictionary[colourIndex]
	colorHtml = '#' + colorHtml
	return colorHtml
	
def getConnectionColour(connectionType):
	colourIndex = entityVectorConnectionDrawColourNameArray[connectionType]
	colorHtml = GIAcolourHtmlDictionary[connectionColourIndex]
	colorHtml = '#' + colorHtml
	return colorHtml
	
